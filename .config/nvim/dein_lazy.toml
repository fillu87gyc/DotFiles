[[plugins]]
repo = 'Shougo/deoplete.nvim'
on_i = 1
hook_source = '''
  let g:deoplete#enable_at_startup = 1
  let g:deoplete#auto_complete_delay = 0
  let g:deoplete#auto_complete_start_length = 1
  let g:deoplete#enable_camel_case = 0
  let g:deoplete#enable_ignore_case = 0
  let g:deoplete#enable_refresh_always = 0
  let g:deoplete#enable_smart_case = 1
  let g:deoplete#file#enable_buffer_path = 1
  let g:deoplete#max_list = 10000
  inoremap <expr><tab> pumvisible() ? "\<C-n>" :
        \ neosnippet#expandable_or_jumpable() ?
        \    "\<Plug>(neosnippet_expand_or_jump)" : "\<tab>"
'''
depends=['neosnippet.vim']

[[plugins]]
repo = 'rhysd/github-complete.vim'
on_ft = ['markdown', 'gitcommit']
on_i = 1
hook_source = '''
  let g:github_complete_emoji_japanese_workaround = 1
'''

[[plugins]]
repo = 'zchee/deoplete-clang'
hook_source = '''
  let g:deoplete#sources#clang#libclang_path='/Library/Developer/CommandLineTools/usr/lib/libclang.dylib'
  let g:deoplete#sources#clang#clang_header='/Library/Developer/CommandLineTools/usr/lib/clang'
'''
on_ft = ['c', 'cpp', 'cmake']
depends = ['deoplete.nvim']

[[plugins]]
repo='dag/vim-fish'
on_ft='fish'

[[plugins]]
repo= 'cespare/vim-toml'
on_ft = 'toml'

[[plugins]]
repo = 'rhysd/vim-clang-format'
on_ft = ['c','cpp']
hook_add = '''
  let g:clang_format#detect_style_file = 1
  let g:clang_format#auto_format = 1
  let g:clang_format#auto_format_on_insert_leave = 1
  autocmd FileType c ClangFormatAutoEnable
'''

[[plugins]]
repo = 'osyo-manga/vim-precious'
depends = 'context_filetype.vim'
on_ft = 'toml'

[[plugins]]
repo='cohama/lexima.vim'
on_i = 1

# Rubyのend補完
[[plugins]]
repo = 'tpope/vim-endwise'
on_i = 1
on_ft = ['ruby']

# [[plugins]]
# repo='takkii/ruby-dictionary3'
# on_i = 1
# on_ft = ['ruby']
# hook_source='''
#   setlocal dictionary+=/Users/fill/.cache/dein/repos/github.com/takkii/ruby-dictionary3/autoload/source
#   call deoplete#custom#source(
# \ 'dictionary', 'ruby', ['[^. *\t]\.\w*\|\h\w*::'])
# '''

# vim-rails
[[plugins]]
repo= 'tpope/vim-rails'
on_ft = ['ruby', 'eruby', 'css', 'scss', 'html', 'javascript', 'yaml']

# Rubyの自動補完
[[plugins]]
repo = 'Shougo/deoplete-rct'
on_ft = ['ruby']

# Rubyの自動補完
[[plugins]]
repo = 'fishbullet/deoplete-ruby'
on_ft = ['ruby']

# Rubyの自動補完
[[plugins]]
repo = 'osyo-manga/vim-monster'
on_ft = ['ruby']
depends='deoplete'
hook_source = '''
  let g:monster#completion#backend = 'solargraph'
  let g:monster#completion#solargraph#backend = "async_solargraph_suggest"
  let g:deoplete#sources#omni#input_patterns = {
  \ "ruby" : '[^. *\t]\.\w*\|\h\w*::',
  \}
'''
[[plugins]]
repo = 'szw/vim-tags'
on_ft = ['ruby']
hook_source = '''
  let g:vim_tags_auto_generate = 1
  nnoremap <silent><C-]> g<C-]>

'''

[[plugins]]
repo = 'alpaca-tc/alpaca_tags'
on_ft = ['ruby']
hook_source = '''
let g:alpaca_tags#config = {
            \ '_' : '-R --sort=yes --languages=+Ruby --languages=-js,JavaScript',
            \ 'js' : '--languages=+js',
            \ '-js' : '--languages=-js,JavaScript',
            \ 'vim' : '--languages=+Vim,vim',
            \ 'php' : '--languages=+php',
            \ '-vim' : '--languages=-Vim,vim',
            \ '-style': '--languages=-css,scss,js,JavaScript,html',
            \ 'scss' : '--languages=+scss --languages=-css',
            \ 'css' : '--languages=+css',
            \ 'java' : '--languages=+java $JAVA_HOME/src',
            \ 'ruby': '--languages=+Ruby',
            \ 'coffee': '--languages=+coffee',
            \ '-coffee': '--languages=-coffee',
            \ 'bundle': '--languages=+Ruby',
            \ }
augroup AlpacaTags
    autocmd!
    autocmd BufWritePost Gemfile AlpacaTagsBundle
    autocmd BufEnter * AlpacaTagsSet
    autocmd BufWritePost * if isdirectory(glob(getcwd() . '/.git')) | AlpacaTagsUpdate -R | endif
augroup END
'''

[[plugins]]
repo = 'yuku-t/vim-ref-ri'
on_ft =['ruby']
hook_add = '''
  nnoremap ,ri :<C-U>Ref ri<Space>
'''

[[plugins]]
repo = 'thinca/vim-ref'
on_ft =['ruby']
hook_add = '''
  let g:ref_open = 'vsplit'
  nnoremap ,rr :<C-U>Ref refe<Space>
'''

[[plugins]]
repo     = 'prettier/vim-prettier'
build    = 'npm install'
on_ft    = ['javascript', 'typescript', 'vue', 'css', 'scss', 'json', 'markdown']
hook_source = '''
  " @formatアノテーションを持ったファイルの自動フォーマットを無効にする
  let g:prettier#autoformat = 0

  " Prettierのパースエラーをquickfixに表示しない
  let g:prettier#quickfix_enabled = 0

  autocmd BufWritePre *.js,*.ts,*.vue,*.css,*.scss,*.json,*.md PrettierAsync
'''
