
# #   call dein#add('Shougo/neosnippet-snippets')
# #   call dein#add('tpope/vim-surround')
# #   call dein#add('scrooloose/nerdtree')
# #   call dein#add('Shougo/deoplete.nvim')
#   call dein#add('Shougo/denite.nvim')
# #   call dein#add('Lokaltog/vim-easymotion')
# #   call dein#add('tomasr/molokai')
# #   call dein#add('yonchu/accelerated-smooth-scroll')
# #   call dein#add('vim-airline/vim-airline')
# #   call dein#add('vim-airline/vim-airline-themes')
# #   call dein#add('ryanoasis/vim-devicons')
#   call dein#add('kana/vim-smartinput')
#   call dein#add('tpope/vim-fugitive')
# #   call dein#add('tyru/caw.vim')
# #   call dein#add('w0rp/ale')
# #   call dein#add('Yggdroot/indentLine')
#   call dein#add('prettier/vim-prettier')
#   call dein#add('rhysd/vim-clang-format')

[[plugins]]
repo = 'Shougo/neosnippet.vim'
depends = ['neosnippet-snippets', 'context_filetype.vim']
on_i = 1

[[plugins]]
repo = 'tpope/vim-surround'

[[plugins]]
repo = 'w0rp/ale'
on_i = 1
hook_source = '''
let g:ale_lint_on_text_changed = 0
let g:ale_sign_error = ''
let g:ale_sign_warning = ''
let g:airline#extensions#ale#open_lnum_symbol = '('
let g:airline#extensions#ale#close_lnum_symbol = ')'
let g:ale_echo_msg_format = '[%linter%]%code: %%s'
highlight link ALEErrorSign Tag
highlight link ALEWarningSign StorageClass
nmap <silent> <C-k> <Plug>(ale_previous_wrap)
nmap <silent> <C-j> <Plug>(ale_next_wrap)
'''

[[plugins]]
repo = 'scrooloose/nerdtree'
hook_source = '''
  nnoremap <silent> <C-e> :NERDTreeToggle<CR>
  let g:NERDTreeWinSize = 30
  let g:NERDTreeShowBookmarks = 1
  let g:NERDTreeMapUpdir = ''
  let g:NERDTreeMapOpenSplit = '<C-j>'
  let g:NERDTreeMapOpenVSplit = '<C-l>'
  let g:NERDTreeQuitOnOpen = 1
  let g:NERDTreeShowHidden = 1
  let g:NERDTreeIgnore = ['\.git$', '\.clean$', '\.swp$', '\.bak$', '\~$']
  autocmd bufenter * if (winnr('$') == 1 && exists('b:NERDTree') && b:NERDTree.isTabTree()) | q | endif
'''

[[plugins]]
repo = 'rhysd/vim-clang-format'
on_i  =  1
hook_source = '''
  let g:clang_format#detect_style_file = 1
  let g:clang_format#auto_format = 1
  let g:clang_format#auto_format_on_insert_leave = 1
  autocmd FileType c ClangFormatAutoEnable
'''
