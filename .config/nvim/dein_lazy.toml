[[plugins]]
repo = 'Shougo/deoplete.nvim'
on_i = 1
hook_source = '''
  let g:deoplete#enable_at_startup = 1
  let g:deoplete#auto_complete_delay = 0
  let g:deoplete#auto_complete_start_length = 1
  let g:deoplete#enable_camel_case = 0
  let g:deoplete#enable_ignore_case = 0
  let g:deoplete#enable_refresh_always = 0
  let g:deoplete#enable_smart_case = 1
  let g:deoplete#file#enable_buffer_path = 1
  let g:deoplete#max_list = 10000
  inoremap <expr><tab> pumvisible() ? "\<C-n>" :
        \ neosnippet#expandable_or_jumpable() ?
        \    "\<Plug>(neosnippet_expand_or_jump)" : "\<tab>"
'''
depends=['neosnippet']

[[plugins]]
repo = 'rhysd/github-complete.vim'
on_ft = ['markdown', 'gitcommit']
on_i = 1
hook_source = '''
  let g:github_complete_emoji_japanese_workaround = 1
'''

[[plugins]]
repo = 'zchee/deoplete-clang'
hook_source = '''
  let g:deoplete#sources#clang#libclang_path='/Library/Developer/CommandLineTools/usr/lib/libclang.dylib'
  let g:deoplete#sources#clang#clang_header='/Library/Developer/CommandLineTools/usr/lib/clang'
'''
on_ft = ['c', 'cpp', 'cmake']
depends = ['deoplete.nvim']

[[plugins]]
repo='dag/vim-fish'
on_ft='fish'

[[plugins]]
repo= 'cespare/vim-toml'
on_ft = 'toml'

[[plugins]]
repo = 'rhysd/vim-clang-format'
on_ft = ['c','cpp']
hook_add = '''
  let g:clang_format#detect_style_file = 1
  let g:clang_format#auto_format = 1
  let g:clang_format#auto_format_on_insert_leave = 1
  autocmd FileType c ClangFormatAutoEnable
'''

[[plugins]]
repo = 'osyo-manga/vim-precious'
depends = 'context_filetype.vim'
on_ft = 'toml'

[[plugins]]
repo='cohama/lexima.vim'
on_i = 1
hook_source='''
  call lexima#add_rule({'at': '\%#\n\s*}', 'char': '}', 'input': '}', 'delete': '}'})
'''
